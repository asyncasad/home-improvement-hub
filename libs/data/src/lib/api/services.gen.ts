// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from '@hey-api/client-axios';
import type {
  GetAgentData,
  GetAgentError,
  GetAgentResponse,
  PutAgentsByIdData,
  PutAgentsByIdError,
  PutAgentsByIdResponse,
  DeleteAgentsByIdData,
  DeleteAgentsByIdError,
  DeleteAgentsByIdResponse,
  GetAgentsError,
  GetAgentsResponse,
  PostAgentsData,
  PostAgentsError,
  PostAgentsResponse,
  GetCustomerData,
  GetCustomerError,
  GetCustomerResponse,
  PutCustomersByIdData,
  PutCustomersByIdError,
  PutCustomersByIdResponse,
  DeleteCustomersByIdData,
  DeleteCustomersByIdError,
  DeleteCustomersByIdResponse,
  GetCustomersError,
  GetCustomersResponse,
  PostCustomersData,
  PostCustomersError,
  PostCustomersResponse,
  GetJobData,
  GetJobError,
  GetJobResponse,
  PutJobsByIdData,
  PutJobsByIdError,
  PutJobsByIdResponse,
  DeleteJobsByIdData,
  DeleteJobsByIdError,
  DeleteJobsByIdResponse,
  GetJobsError,
  GetJobsResponse,
  PostJobsData,
  PostJobsError,
  PostJobsResponse,
  GetMetricRunFrequencyData,
  GetMetricRunFrequencyError,
  GetMetricRunFrequencyResponse,
  GetMetricRunFrequenciesError,
  GetMetricRunFrequenciesResponse,
  PostMetricRunFrequenciesData,
  PostMetricRunFrequenciesError,
  PostMetricRunFrequenciesResponse,
  PutMetricRunFrequenciesData,
  PutMetricRunFrequenciesError,
  PutMetricRunFrequenciesResponse,
  DeleteMetricRunFrequenciesData,
  DeleteMetricRunFrequenciesError,
  DeleteMetricRunFrequenciesResponse,
  GetMetricRunFrequenciesByNameData,
  GetMetricRunFrequenciesByNameError,
  GetMetricRunFrequenciesByNameResponse,
  GetMetricThresholdDirectionTypeData,
  GetMetricThresholdDirectionTypeError,
  GetMetricThresholdDirectionTypeResponse,
  GetMetricThresholdDirectionTypesError,
  GetMetricThresholdDirectionTypesResponse,
  PostMetricThresholdDirectionTypesData,
  PostMetricThresholdDirectionTypesError,
  PostMetricThresholdDirectionTypesResponse,
  PutMetricThresholdDirectionTypesData,
  PutMetricThresholdDirectionTypesError,
  PutMetricThresholdDirectionTypesResponse,
  DeleteMetricThresholdDirectionTypesData,
  DeleteMetricThresholdDirectionTypesError,
  DeleteMetricThresholdDirectionTypesResponse,
  GetMetricThresholdDirectionTypesByNameData,
  GetMetricThresholdDirectionTypesByNameError,
  GetMetricThresholdDirectionTypesByNameResponse,
  GetMetricTypeData,
  GetMetricTypeError,
  GetMetricTypeResponse,
  GetMetricTypesError,
  GetMetricTypesResponse,
  PostMetricTypesData,
  PostMetricTypesError,
  PostMetricTypesResponse,
  PutMetricTypesData,
  PutMetricTypesError,
  PutMetricTypesResponse,
  DeleteMetricTypesData,
  DeleteMetricTypesError,
  DeleteMetricTypesResponse,
  GetMetricTypesByNameData,
  GetMetricTypesByNameError,
  GetMetricTypesByNameResponse,
  GetMetricData,
  GetMetricError,
  GetMetricResponse,
  GetMetricsError,
  GetMetricsResponse,
  PostMetricsData,
  PostMetricsError,
  PostMetricsResponse,
  PutMetricsData,
  PutMetricsError,
  PutMetricsResponse,
  DeleteMetricsData,
  DeleteMetricsError,
  DeleteMetricsResponse,
  GetMetricsByMetricNameData,
  GetMetricsByMetricNameError,
  GetMetricsByMetricNameResponse,
  GetReviewData,
  GetReviewError,
  GetReviewResponse,
  PutReviewsByIdData,
  PutReviewsByIdError,
  PutReviewsByIdResponse,
  DeleteReviewsByIdData,
  DeleteReviewsByIdError,
  DeleteReviewsByIdResponse,
  GetReviewsError,
  GetReviewsResponse,
  PostReviewsData,
  PostReviewsError,
  PostReviewsResponse,
  GetServiceAlignmentTypeData,
  GetServiceAlignmentTypeError,
  GetServiceAlignmentTypeResponse,
  GetServiceAlignmentTypesError,
  GetServiceAlignmentTypesResponse,
  PostServiceAlignmentTypesData,
  PostServiceAlignmentTypesError,
  PostServiceAlignmentTypesResponse,
  PutServiceAlignmentTypesData,
  PutServiceAlignmentTypesError,
  PutServiceAlignmentTypesResponse,
  DeleteServiceAlignmentTypesData,
  DeleteServiceAlignmentTypesError,
  DeleteServiceAlignmentTypesResponse,
  GetServiceAlignmentTypesByNameData,
  GetServiceAlignmentTypesByNameError,
  GetServiceAlignmentTypesByNameResponse,
  GetServiceData,
  GetServiceError,
  GetServiceResponse,
  PutServicesByIdData,
  PutServicesByIdError,
  PutServicesByIdResponse,
  DeleteServicesByIdData,
  DeleteServicesByIdError,
  DeleteServicesByIdResponse,
  GetServicesError,
  GetServicesResponse,
  PostServicesData,
  PostServicesError,
  PostServicesResponse,
  GetUserData,
  GetUserError,
  GetUserResponse,
  PutUsersByIdData,
  PutUsersByIdError,
  PutUsersByIdResponse,
  DeleteUsersByIdData,
  DeleteUsersByIdError,
  DeleteUsersByIdResponse,
  GetUsersError,
  GetUsersResponse,
  PostUsersData,
  PostUsersError,
  PostUsersResponse,
} from './types.gen';

export const client = createClient(createConfig());

export const getAgent = <ThrowOnError extends boolean = false>(
  options: Options<GetAgentData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetAgentResponse,
    GetAgentError,
    ThrowOnError
  >({
    ...options,
    url: '/agents/{id}',
  });
};

export const putAgentsById = <ThrowOnError extends boolean = false>(
  options: Options<PutAgentsByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutAgentsByIdResponse,
    PutAgentsByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/agents/{id}',
  });
};

export const deleteAgentsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteAgentsByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteAgentsByIdResponse,
    DeleteAgentsByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/agents/{id}',
  });
};

export const getAgents = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetAgentsResponse,
    GetAgentsError,
    ThrowOnError
  >({
    ...options,
    url: '/agents',
  });
};

export const postAgents = <ThrowOnError extends boolean = false>(
  options: Options<PostAgentsData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostAgentsResponse,
    PostAgentsError,
    ThrowOnError
  >({
    ...options,
    url: '/agents',
  });
};

export const getCustomer = <ThrowOnError extends boolean = false>(
  options: Options<GetCustomerData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetCustomerResponse,
    GetCustomerError,
    ThrowOnError
  >({
    ...options,
    url: '/customers/{id}',
  });
};

export const putCustomersById = <ThrowOnError extends boolean = false>(
  options: Options<PutCustomersByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutCustomersByIdResponse,
    PutCustomersByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/customers/{id}',
  });
};

export const deleteCustomersById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteCustomersByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteCustomersByIdResponse,
    DeleteCustomersByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/customers/{id}',
  });
};

export const getCustomers = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetCustomersResponse,
    GetCustomersError,
    ThrowOnError
  >({
    ...options,
    url: '/customers',
  });
};

export const postCustomers = <ThrowOnError extends boolean = false>(
  options: Options<PostCustomersData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostCustomersResponse,
    PostCustomersError,
    ThrowOnError
  >({
    ...options,
    url: '/customers',
  });
};

export const getJob = <ThrowOnError extends boolean = false>(
  options: Options<GetJobData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetJobResponse,
    GetJobError,
    ThrowOnError
  >({
    ...options,
    url: '/jobs/{id}',
  });
};

export const putJobsById = <ThrowOnError extends boolean = false>(
  options: Options<PutJobsByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutJobsByIdResponse,
    PutJobsByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/jobs/{id}',
  });
};

export const deleteJobsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteJobsByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteJobsByIdResponse,
    DeleteJobsByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/jobs/{id}',
  });
};

export const getJobs = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetJobsResponse,
    GetJobsError,
    ThrowOnError
  >({
    ...options,
    url: '/jobs',
  });
};

export const postJobs = <ThrowOnError extends boolean = false>(
  options: Options<PostJobsData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostJobsResponse,
    PostJobsError,
    ThrowOnError
  >({
    ...options,
    url: '/jobs',
  });
};

export const getMetricRunFrequency = <ThrowOnError extends boolean = false>(
  options: Options<GetMetricRunFrequencyData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricRunFrequencyResponse,
    GetMetricRunFrequencyError,
    ThrowOnError
  >({
    ...options,
    url: '/metricRunFrequencies/{id}',
  });
};

export const getMetricRunFrequencies = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricRunFrequenciesResponse,
    GetMetricRunFrequenciesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricRunFrequencies',
  });
};

export const postMetricRunFrequencies = <ThrowOnError extends boolean = false>(
  options: Options<PostMetricRunFrequenciesData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostMetricRunFrequenciesResponse,
    PostMetricRunFrequenciesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricRunFrequencies',
  });
};

export const putMetricRunFrequencies = <ThrowOnError extends boolean = false>(
  options: Options<PutMetricRunFrequenciesData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutMetricRunFrequenciesResponse,
    PutMetricRunFrequenciesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricRunFrequencies',
  });
};

export const deleteMetricRunFrequencies = <
  ThrowOnError extends boolean = false
>(
  options: Options<DeleteMetricRunFrequenciesData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteMetricRunFrequenciesResponse,
    DeleteMetricRunFrequenciesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricRunFrequencies',
  });
};

export const getMetricRunFrequenciesByName = <
  ThrowOnError extends boolean = false
>(
  options: Options<GetMetricRunFrequenciesByNameData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricRunFrequenciesByNameResponse,
    GetMetricRunFrequenciesByNameError,
    ThrowOnError
  >({
    ...options,
    url: '/metricRunFrequencies/{name}',
  });
};

export const getMetricThresholdDirectionType = <
  ThrowOnError extends boolean = false
>(
  options: Options<GetMetricThresholdDirectionTypeData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricThresholdDirectionTypeResponse,
    GetMetricThresholdDirectionTypeError,
    ThrowOnError
  >({
    ...options,
    url: '/metricThresholdDirectionTypes/{id}',
  });
};

export const getMetricThresholdDirectionTypes = <
  ThrowOnError extends boolean = false
>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricThresholdDirectionTypesResponse,
    GetMetricThresholdDirectionTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricThresholdDirectionTypes',
  });
};

export const postMetricThresholdDirectionTypes = <
  ThrowOnError extends boolean = false
>(
  options: Options<PostMetricThresholdDirectionTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostMetricThresholdDirectionTypesResponse,
    PostMetricThresholdDirectionTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricThresholdDirectionTypes',
  });
};

export const putMetricThresholdDirectionTypes = <
  ThrowOnError extends boolean = false
>(
  options: Options<PutMetricThresholdDirectionTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutMetricThresholdDirectionTypesResponse,
    PutMetricThresholdDirectionTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricThresholdDirectionTypes',
  });
};

export const deleteMetricThresholdDirectionTypes = <
  ThrowOnError extends boolean = false
>(
  options: Options<DeleteMetricThresholdDirectionTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteMetricThresholdDirectionTypesResponse,
    DeleteMetricThresholdDirectionTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricThresholdDirectionTypes',
  });
};

export const getMetricThresholdDirectionTypesByName = <
  ThrowOnError extends boolean = false
>(
  options: Options<GetMetricThresholdDirectionTypesByNameData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricThresholdDirectionTypesByNameResponse,
    GetMetricThresholdDirectionTypesByNameError,
    ThrowOnError
  >({
    ...options,
    url: '/metricThresholdDirectionTypes/{name}',
  });
};

export const getMetricType = <ThrowOnError extends boolean = false>(
  options: Options<GetMetricTypeData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricTypeResponse,
    GetMetricTypeError,
    ThrowOnError
  >({
    ...options,
    url: '/metricTypes/{id}',
  });
};

export const getMetricTypes = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricTypesResponse,
    GetMetricTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricTypes',
  });
};

export const postMetricTypes = <ThrowOnError extends boolean = false>(
  options: Options<PostMetricTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostMetricTypesResponse,
    PostMetricTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricTypes',
  });
};

export const putMetricTypes = <ThrowOnError extends boolean = false>(
  options: Options<PutMetricTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutMetricTypesResponse,
    PutMetricTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricTypes',
  });
};

export const deleteMetricTypes = <ThrowOnError extends boolean = false>(
  options: Options<DeleteMetricTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteMetricTypesResponse,
    DeleteMetricTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/metricTypes',
  });
};

export const getMetricTypesByName = <ThrowOnError extends boolean = false>(
  options: Options<GetMetricTypesByNameData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricTypesByNameResponse,
    GetMetricTypesByNameError,
    ThrowOnError
  >({
    ...options,
    url: '/metricTypes/{name}',
  });
};

export const getMetric = <ThrowOnError extends boolean = false>(
  options: Options<GetMetricData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricResponse,
    GetMetricError,
    ThrowOnError
  >({
    ...options,
    url: '/metrics/{id}',
  });
};

export const getMetrics = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricsResponse,
    GetMetricsError,
    ThrowOnError
  >({
    ...options,
    url: '/metrics',
  });
};

export const postMetrics = <ThrowOnError extends boolean = false>(
  options: Options<PostMetricsData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostMetricsResponse,
    PostMetricsError,
    ThrowOnError
  >({
    ...options,
    url: '/metrics',
  });
};

export const putMetrics = <ThrowOnError extends boolean = false>(
  options: Options<PutMetricsData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutMetricsResponse,
    PutMetricsError,
    ThrowOnError
  >({
    ...options,
    url: '/metrics',
  });
};

export const deleteMetrics = <ThrowOnError extends boolean = false>(
  options: Options<DeleteMetricsData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteMetricsResponse,
    DeleteMetricsError,
    ThrowOnError
  >({
    ...options,
    url: '/metrics',
  });
};

export const getMetricsByMetricName = <ThrowOnError extends boolean = false>(
  options: Options<GetMetricsByMetricNameData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetMetricsByMetricNameResponse,
    GetMetricsByMetricNameError,
    ThrowOnError
  >({
    ...options,
    url: '/metrics/{metricName}',
  });
};

export const getReview = <ThrowOnError extends boolean = false>(
  options: Options<GetReviewData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetReviewResponse,
    GetReviewError,
    ThrowOnError
  >({
    ...options,
    url: '/reviews/{id}',
  });
};

export const putReviewsById = <ThrowOnError extends boolean = false>(
  options: Options<PutReviewsByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutReviewsByIdResponse,
    PutReviewsByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/reviews/{id}',
  });
};

export const deleteReviewsById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteReviewsByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteReviewsByIdResponse,
    DeleteReviewsByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/reviews/{id}',
  });
};

export const getReviews = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetReviewsResponse,
    GetReviewsError,
    ThrowOnError
  >({
    ...options,
    url: '/reviews',
  });
};

export const postReviews = <ThrowOnError extends boolean = false>(
  options: Options<PostReviewsData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostReviewsResponse,
    PostReviewsError,
    ThrowOnError
  >({
    ...options,
    url: '/reviews',
  });
};

export const getServiceAlignmentType = <ThrowOnError extends boolean = false>(
  options: Options<GetServiceAlignmentTypeData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetServiceAlignmentTypeResponse,
    GetServiceAlignmentTypeError,
    ThrowOnError
  >({
    ...options,
    url: '/serviceAlignmentTypes/{id}',
  });
};

export const getServiceAlignmentTypes = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetServiceAlignmentTypesResponse,
    GetServiceAlignmentTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/serviceAlignmentTypes',
  });
};

export const postServiceAlignmentTypes = <ThrowOnError extends boolean = false>(
  options: Options<PostServiceAlignmentTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostServiceAlignmentTypesResponse,
    PostServiceAlignmentTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/serviceAlignmentTypes',
  });
};

export const putServiceAlignmentTypes = <ThrowOnError extends boolean = false>(
  options: Options<PutServiceAlignmentTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutServiceAlignmentTypesResponse,
    PutServiceAlignmentTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/serviceAlignmentTypes',
  });
};

export const deleteServiceAlignmentTypes = <
  ThrowOnError extends boolean = false
>(
  options: Options<DeleteServiceAlignmentTypesData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteServiceAlignmentTypesResponse,
    DeleteServiceAlignmentTypesError,
    ThrowOnError
  >({
    ...options,
    url: '/serviceAlignmentTypes',
  });
};

export const getServiceAlignmentTypesByName = <
  ThrowOnError extends boolean = false
>(
  options: Options<GetServiceAlignmentTypesByNameData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetServiceAlignmentTypesByNameResponse,
    GetServiceAlignmentTypesByNameError,
    ThrowOnError
  >({
    ...options,
    url: '/serviceAlignmentTypes/{name}',
  });
};

export const getService = <ThrowOnError extends boolean = false>(
  options: Options<GetServiceData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetServiceResponse,
    GetServiceError,
    ThrowOnError
  >({
    ...options,
    url: '/services/{id}',
  });
};

export const putServicesById = <ThrowOnError extends boolean = false>(
  options: Options<PutServicesByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutServicesByIdResponse,
    PutServicesByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/services/{id}',
  });
};

export const deleteServicesById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteServicesByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteServicesByIdResponse,
    DeleteServicesByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/services/{id}',
  });
};

export const getServices = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetServicesResponse,
    GetServicesError,
    ThrowOnError
  >({
    ...options,
    url: '/services',
  });
};

export const postServices = <ThrowOnError extends boolean = false>(
  options: Options<PostServicesData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostServicesResponse,
    PostServicesError,
    ThrowOnError
  >({
    ...options,
    url: '/services',
  });
};

export const getUser = <ThrowOnError extends boolean = false>(
  options: Options<GetUserData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetUserResponse,
    GetUserError,
    ThrowOnError
  >({
    ...options,
    url: '/users/{id}',
  });
};

export const putUsersById = <ThrowOnError extends boolean = false>(
  options: Options<PutUsersByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).put<
    PutUsersByIdResponse,
    PutUsersByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/users/{id}',
  });
};

export const deleteUsersById = <ThrowOnError extends boolean = false>(
  options: Options<DeleteUsersByIdData, ThrowOnError>
) => {
  return (options?.client ?? client).delete<
    DeleteUsersByIdResponse,
    DeleteUsersByIdError,
    ThrowOnError
  >({
    ...options,
    url: '/users/{id}',
  });
};

export const getUsers = <ThrowOnError extends boolean = false>(
  options?: Options<unknown, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetUsersResponse,
    GetUsersError,
    ThrowOnError
  >({
    ...options,
    url: '/users',
  });
};

export const postUsers = <ThrowOnError extends boolean = false>(
  options: Options<PostUsersData, ThrowOnError>
) => {
  return (options?.client ?? client).post<
    PostUsersResponse,
    PostUsersError,
    ThrowOnError
  >({
    ...options,
    url: '/users',
  });
};
